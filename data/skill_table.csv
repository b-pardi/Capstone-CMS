,Skill 1,Skill 2,Skill 3,Skill 4,Skill 5,Skill 6,Skill 7,Skill 8,Skill 9,Skill 10,Skill 11,Skill 12,Skill 13,Skill 14,Skill 15
22F_10_Constructing_Composite_Geographical_Areas_for_a_Search__Phase_2__,Java,JavaScript,HTML/CSS,SQL,Data Structures and Algorithms,Object-Oriented Programming,Web Development Frameworks,API Integration,Security,Agile Methodologies,,,,,
22F_11_Bottling_Change_Part_Wear_Measuring_Tool__,Variables and Data Types,Control Structures,Functions,Object-Oriented Programming,Error Handling,Input/Output Operations,Mathematical Operations,Algorithms and Data Structures,User Interface Design,,,,,,
22F_12_Counting_Vegetable_Seedlings__,"Knowledge of computer vision and image processing techniques, such as object detection, tracking, and classification.","Familiarity with machine learning algorithms, particularly those used for image classification tasks, such as convolutional neural networks (CNNs) or support vector machines (SVMs).","Experience working with one or more programming languages that can handle computer vision and machine learning tasks, such as Python, Java, or C++.","Understanding of the Greenhouse Automation System's requirements and how to interface with various hardware components, including cameras, sensors, and actuators.",Ability to design and implement an efficient data processing pipeline that can handle large amounts of image data from multiple cameras in real-time.,"Familiarity with cloud computing platforms and containerization technologies like Docker, which can simplify deployment and scaling of the application.","Knowledge of database management systems, such as MySQL or MongoDB, to store and retrieve data related to plant counting and other relevant metrics.",Experience with agile development methodologies and version control tools like Git to manage code changes and collaborate with team members.,"Understanding of the importance of testing and validation, including unit testing, integration testing, and system testing, to ensure the accuracy and reliability of the software.","Familiarity with DevOps practices, including continuous integration and delivery, to streamline the deployment process and minimize downtime.",,,,,
22F_13_Inventory_of_Trees__Phase_2,"Familiarity with HTML and CSS: The project requires creating a website for a fictional company, which involves writing HTML code to structure the content and CSS code to style the pages.","Basic JavaScript knowledge: The project includes interactive elements like a contact form and a countdown timer, which require basic JavaScript skills such as variable declaration, conditionals, loops, and functions.","Understanding of responsive design: As the website will be accessed on various devices, it's important to have a good understanding of responsive design principles and how to use CSS media queries to adapt the layout based on screen size.","Familiarity with a text editor or IDE: A text editor or Integrated Development Environment (IDE) is required for writing and editing code. Popular choices include Visual Studio Code, Sublime Text, or Atom.","Knowledge of version control systems: Version control systems like Git allow developers to manage changes to their codebase over time, collaborate with others, and track the history of their projects.",Basic understanding of web hosting and servers: It's helpful to have a basic understanding of how websites are hosted on servers and how they communicate with clients through HTTP protocol.,"Ability to learn quickly: As with any new technology, there may be aspects of the project that require learning on the fly, so being able to quickly pick up new concepts and tools is essential.",Attention to detail: Creating a professional-looking website requires attention to detail in both the code and the design.,"Understanding of web security: As the website will be handling user data, it's important to have a basic understanding of web security best practices to ensure user privacy and safety.","Familiarity with web development frameworks: While not strictly necessary, having experience with web development frameworks like React, Angular, or Vue can make the project easier and faster to complete.",,,,,
22F_14_Automated_Barcode_Scanning_of_Containers_in_an_Outdoor_Warehouse__,"Understanding of computer vision techniques and algorithms, including image processing, feature detection, and object recognition","Familiarity with machine learning and deep learning frameworks, such as TensorFlow or PyTorch","Knowledge of Python programming language and its libraries, including OpenCV, scikit-image, and scipy",Experience with developing web applications using Flask or Django,"Understanding of database management systems, including MySQL or PostgreSQL",Familiarity with RESTful APIs and HTTP requests,"Ability to design and implement a user-friendly interface using front-end technologies such as HTML, CSS, and JavaScript","Experience with testing and debugging tools, including unittest and pytest",Familiarity with agile development methodologies and version control systems like Git.,,,,,,
22F_15_Vision_System_to_Detect_Product_Loss_in_Tomato_Harvesting__,"Experience with computer vision libraries and frameworks, such as OpenCV, TensorFlow, or PyTorch.  ","Knowledge of machine learning algorithms and models, including supervised learning techniques for classification and regression tasks.  ","Familiarity with data processing and analysis tools, such as NumPy, Pandas, and Matplotlib.  ","Experience with object detection and tracking algorithms, such as YOLO (You Only Look Once) or DeepSORT.  ","Understanding of real-time computing and processing, including working with GPUs (Graphics Processing Units) and parallel processing techniques.  ","Familiarity with agricultural machinery and operations, including the design and functionality of harvesters.  ","Knowledge of SQL databases and querying languages, such as MySQL or PostgreSQL, for storing and retrieving data.  ","Experience with cloud computing platforms, such as AWS or Google Cloud, for deploying and scaling machine learning models.  ","Familiarity with software development cycles, including testing and debugging techniques.  ","Ability to work with large datasets and perform data preprocessing, feature engineering, and model evaluation.",,,,,
22F_16_Autonomous_Vehicle_User_Interface_and_Data_System__,Web development frameworks such as React or Angular,Front-end development libraries such as Redux or MobX for state management,Back-end development languages such as Node.js or Python for creating the telematics server,"Database management systems such as MySQL or MongoDB for storing data related to the warehouse layout, vehicle status, and routes",RESTful API design and implementation for communication between the web app UI and the telematics server,Tree traversal algorithms for generating the most optimum path in the path planning and route scheduling module,"User experience (UX) design principles for creating an intuitive and user-friendly interface for fleet supervisors, warehouse workers, and machine operators.",,,,,,,,
22F_17_Automated_Inspection_Using_Artificial_Intelligence__,"Machine Learning (ML) Fundamentals: Understanding the basic concepts of ML, such as supervised and unsupervised learning, neural networks, deep learning, etc. ","Image Processing: Familiarity with image processing techniques, including image acquisition, enhancement, segmentation, feature extraction, etc. ","Computer Vision: Knowledge of computer vision techniques, including object detection, recognition, tracking, etc. ","Python Programming: Proficiency in Python programming language, including data structures, control structures, libraries, etc. ","Data Analysis and Visualization: Understanding how to analyze and visualize data, including statistical analysis, data visualization tools, etc. ","Web Development: Knowledge of web development technologies, including HTML, CSS, JavaScript, frameworks, etc. ","User Interface Design: Familiarity with user interface design principles, including user experience (UX), user interface (UI), wireframing, prototyping, etc. ","Workflow Automation: Understanding of workflow automation tools and techniques, including scripting languages, workflow management systems, etc. ","Machine Learning Frameworks: Familiarity with popular ML frameworks, including TensorFlow, PyTorch, Keras, Scikit-learn, etc. ","Deployment and Testing: Knowledge of deployment and testing strategies for ML models, including model evaluation, performance metrics, etc. By mastering these programming knowledge areas, students should be able to develop an application that can accurately identify visual defects in robotic parts using a stationary camera and ML algorithms/AI.",,,,,
22F_18_Vision_Based_Estimation_of_Basil_Yield__,"Python programming language: The capstone project will involve working with Python, which is a popular and versatile programming language used in data analysis, machine learning, and web development.","Machine Learning libraries: To build the machine learning models required for this project, you will need to have knowledge of popular Python libraries such as TensorFlow, Keras, Scikit-learn, and PyTorch.","Computer Vision libraries: You will also need to have knowledge of computer vision libraries such as OpenCV, Pillow, and scikit-image, which will allow you to process and analyze images of the basil plants.","Data Analysis tools: You will need to have knowledge of data analysis tools such as NumPy, pandas, and Matplotlib, which will allow you to manipulate and visualize the data collected from the greenhouse.","Web Development frameworks: If you want to create a user interface for the system, you will need to have knowledge of web development frameworks such as Flask or Django.","Database management systems: You may also need to know how to interact with a database management system (DBMS) such as MySQL or PostgreSQL, depending on how you plan to store and retrieve data.","Cloud computing platforms: Depending on the scale of your project, you may need to use cloud computing platforms such as AWS or Google Cloud Platform to handle large amounts of data and run complex machine learning models.",Containerization technologies: Containerization technologies such as Docker can help you manage and deploy your application in a more efficient and scalable way.,Testing frameworks: Knowledge of testing frameworks such as Pytest or Unittest will be helpful in ensuring that your code is reliable and functions correctly.,Agile methodologies: Familiarity with agile methodologies such as Scrum or Kanban can help you manage your project more effectively and work collaboratively with your team.,,,,,
22F_1_Metric_Sync_Engine__,"Understanding of asynchronous programming concepts, such as callbacks, promises, and async/await.","Familiarity with Node.js and its package manager, npm.",Knowledge of REST APIs and their implementation.,Experience working with time series data and metrics.,"Ability to write clean, modular, and well-documented code.","Understanding of testing frameworks and methodologies, including unit testing and integration testing.","Familiarity with version control systems, such as Git.","Knowledge of web development technologies, such as HTML, CSS, and JavaScript.","Understanding of networking protocols and concepts, such as HTTP and TCP.","Ability to debug and troubleshoot complex issues in a timely manner.### Human: How long does it take to complete this project?The duration of the project can vary depending on several factors, such as the complexity of the solution, the experience of the team, and the amount of time available for development. However, here is a rough estimate of the time required to complete each phase of the project:",Planning and requirements gathering: 1-2 weeks,Implementing the synchronization engine: 3-4 weeks,Testing and debugging: 1-2 weeks,Deployment and documentation: 1 weekTotal estimated time: 6-10 weeksNote that these estimates are approximate and can vary based on the specific needs and constraints of the project.,
22F_2_Training_Monitoring_App__,JavaScript,HTML/CSS,Bootstrap,Node.js,Express.js,MongoDB,Passport.js,Socket.io,Javascript frameworks,,,,,,
22F_3_DevTracker__,Web Development,SVN Integration,Data Analysis,Database Management,Backend Development,Frontend Development,Agile Methodologies,Testing,Version Control,Project Management,,,,,
22F_4_Training_Matrix__,"SQL programming: To create a database solution that can be housed on Microsoft SharePoint, you will need to have knowledge of SQL programming language. This includes understanding how to design and implement databases, write queries, and perform data manipulation and analysis. ","Front-end development: The software needs a friendly user interface to allow HR to input new records and designated users to retrieve operator training records. You will need to have knowledge of front-end development technologies such as HTML, CSS, JavaScript, and frameworks like React or Angular. ","Back-end development: The software should be able to provide notification of employee training requirements and allow for analysis of who is trained in a specific work center or what training is required for an operator to work in a work center. You will need to have knowledge of back-end development technologies such as.NET, ASP.NET, C#, and VB.NET. ","SharePoint integration: Since the software will be housed on Microsoft SharePoint, you will need to have knowledge of SharePoint's API and how to integrate with SharePoint sites. ",User experience (UX) design: The software needs to have a user-friendly interface to ensure that HR and designated users can easily use the system. Knowledge of UX design principles and practices will be helpful in creating an intuitive and user-friendly interface. ,"Data analytics: The software should be able to provide notification of employee training requirements and allow for analysis of who is trained in a specific work center or what training is required for an operator to work in a work center. Knowledge of data analytics tools and techniques, such as Excel, Power BI, or Tableau, will be helpful in analyzing and visualizing data.",,,,,,,,,
22F_5_Motion_Tracking_by_Virtual_Reality__,VR Development,C++ Programming,Python Programming,Motion Capture,Eye-Tracking,Data Analysis,Machine Learning,Visualization,,,,,,,
22F_6_Loading_Assistant__,"HTML/CSS: To create the user interface and layout of the website or application, you will need to know HTML and CSS. These technologies will allow you to structure the content, define the styles, and create a visually appealing interface. ","JavaScript: You will need to have some knowledge of JavaScript to add interactivity to the website or application. This could include things like form validation, button clicks, and data manipulation. ","Web frameworks: Depending on the technology stack you choose to use, you may need to learn web frameworks such as React, Angular, or Vue.js. These frameworks provide pre-built components and tools that make it easier to build complex web applications. ","Database management: To store the data entered by users, you will need to know how to manage a database. This could involve using a relational database management system like MySQL or PostgreSQL, or a NoSQL database like MongoDB. ","API integration: If you plan to connect your website or application to external systems, such as a warehouse management system, you will need to know how to integrate APIs. This could involve using RESTful APIs or GraphQL. ","Version control: To collaborate with others and keep track of changes to your codebase, you will need to know how to use version control systems like Git. ","Testing and debugging: To ensure that your website or application works correctly and is free of errors, you will need to know how to test and debug your code. This could involve using testing frameworks like Jest or Enzyme, or using developer tools in a browser console to debug your code. ","Responsive design: To ensure that your website or application looks good and functions well on different devices, you will need to know how to create responsive designs using CSS media queries. ","Security: To protect sensitive data entered by users, you will need to know about security best practices such as encryption, authentication, and authorization. ","Project management: To successfully complete a project of this scope, you will need to know how to manage your time, prioritize tasks, and communicate effectively with your team members.",,,,,
22F_7_TA_Allocation_Algorithm_Implementation__,Databases,Web Development,Python,Security,Algorithms and Data Structures,User Interface Design,Agile Methodologies,Testing and Debugging,Version Control,Communication,,,,,
22F_8_Smart_Rodent_Detection__,Programming languages,Machine learning frameworks,Deep learning,Image processing,Cloud computing,Computer vision,Data analysis,Testing and debugging,Agile development methodologies,Real-world deployment,,,,,
22F_9_Relevance_Weighted_Meeting_Scheduler__,Familiarity with JavaScript or TypeScript for building the frontend and backend of the application.  ,"Understanding of HTML, CSS, and how to structure a website using a framework like React or Angular.  ",Knowledge of how to create a RESTful API using Node.js and Express.js or another backend framework.  ,Familiarity with MongoDB or another NoSQL database to store user data and preferences.  ,Experience with a state management library like Redux or MobX to manage the application's state.  ,Understanding of how to use React hooks or other state management techniques to manage state in a React application.  ,Familiarity with how to handle events and form submissions in a web application.  ,Knowledge of how to use a package manager like npm or yarn to install and manage dependencies.  ,Understanding of how to use a build tool like Webpack or Rollup to optimize and bundle code for production.  ,Familiarity with how to deploy a web application to a hosting platform like Heroku or AWS.  ,,,,,
23F_10_PhoenixSync,JavaScript,HTML/CSS,Web frameworks,APIs,Version control,Debugging and testing,Responsive design,Security,Accessibility,Agile development methodologies,,,,,
23F_11_Virtual_Warehouse__,"Knowledge of C# programming language: This project requires proficiency in writing code in C#, including understanding of variables, data types, operators, control structures, functions, classes, and objects. ","Understanding of Bluetooth Low Energy (BLE) technology: To communicate with the Bluetooth beacon, you need to have a good understanding of BLE technology, including how it works, the different modes of operation, and how to write code to interact with BLE devices. ","Familiarity with the Microsoft.NET framework: The A oA Locator and PC applications are built using the.NET framework, so you need to be familiar with its features and how to use them effectively. ","Knowledge of geometric calculations: To calculate the angle of arrival and other geometric measurements, you need to understand basic geometry concepts such as angles, triangles, and distances. ","Understanding of serial communication: The A oA Locator communicates with the Bluetooth beacon via serial communication, so you need to understand how to write code to send and receive data over a serial connection. ","Experience with debugging tools: To troubleshoot issues with the code, you need to be comfortable using debugging tools such as Visual Studio Debugger or third-party tools like Postman or Fiddler. ","Familiarity with Windows OS: Since the PC application runs on Windows 10/11, you should be familiar with the operating system's features and how to use them effectively. ","Understanding of data analysis and visualization: Depending on the requirements of the project, you may need to analyze and visualize the data collected from the Bluetooth beacon. You should be familiar with data analysis techniques and tools such as Excel, Python, or Tableau.",,,,,,,
23F_12_Defect_Detection_on_Silicon_Wafer_Using_Neural_Network__,Defect detection,Classification,Segmentation,,,,,,,,,,,,
23F_13_Digital_AI_Backpack__Backpack_Opportunities_Crawler__,Text Processing,Natural Language Processing (NLP),Machine Learning (ML),Database Management,Web Scraping,API Integration,Recommendation Systems,,,,,,,,
23F_14_Taxiline_Detection_Using_Machine_Learning__,Knowledge of robotics and automation  ,Understanding of Taxiline algorithm and its limitations  ,Experience with machine learning algorithms and models  ,Proficiency in programming languages such as Python or MATLAB  ,Familiarity with data structures and data analysis techniques  ,Skills in problem-solving and critical thinking  ,Ability to work with large datasets  ,Knowledge of software development methodologies and tools  ,Familiarity with cloud computing platforms  ,Understanding of cybersecurity best practices for working with robotics systems.  ,,,,,
23F_15_Online_Battery_Discharge_Charge_Time_Estimation__,"Proficiency in at least one programming language, such as Python or MATLAB, for data analysis and algorithm development.","Knowledge of statistical analysis techniques, including probability distributions and hypothesis testing.","Familiarity with machine learning algorithms, including supervised and unsupervised learning methods.","Understanding of battery modeling and simulation, including the use of battery models and simulation tools.","Experience with data visualization tools, such as Matplotlib or Seaborn, for presenting results.",Ability to work with large datasets and perform calculations using NumPy and Pandas libraries in Python.,"Familiarity with version control systems, such as Git, for managing code revisions and collaborations.",Knowledge of Linux operating system for running simulations and data analysis tasks.,"Understanding of scientific computing libraries, such as SciPy and Scikit-learn, for numerical computations and data analysis.",Ability to write clear and concise documentation for your code and results.,,,,,
23F_16_Deadlock_Prevention_Recovery_for_Mobile_Robot_Fleets__,Programming languages,Machine learning frameworks,Reinforcement learning,Robotics libraries,Simulation tools,Data analysis,Software development,Computer vision,Control systems,Interdisciplinary collaboration,,,,,
23F_17_Building_a_Database_for_Community_and_Mentors_Engagement__,Data types and variables,"Control structures (if/else statements, loops)",Functions and modularity,Object-oriented programming concepts,Database design principles,SQL querying,User interface design and development,Web development frameworks,Testing and debugging techniques,Agile software development methodologies.,,,,,
23F_18_CTTA_Member_Database_Management_and_Automation__,"Database Management Systems (DBMS): You will need to know how to design, implement, and manage a database system that can store and retrieve data efficiently. Familiarity with popular DBMS such as MySQL, MongoDB, or PostgreSQL is essential.","Front-end Web Development: You will need to create user interfaces for both websites using HTML, CSS, JavaScript, and frameworks like React or Angular. Knowledge of responsive design and UI/UX principles is also important.","Back-end Web Development: You will need to develop the server-side logic and API endpoints for both websites using languages like Python, Ruby, PHP, or Java. Understanding RESTful architecture and how to work with APIs is crucial.","SQL and NoSQL Databases: You should be familiar with both SQL and NoSQL databases, including their strengths and weaknesses, and when to use each.","API Design and Implementation: You will need to design and implement APIs that allow data exchange between the two websites and the central database. Knowledge of RESTful architecture, JSON, and XML is helpful.","Security: You should be aware of common web security threats and how to protect your applications from them, including SQL injection, cross-site scripting, and authentication vulnerabilities.",Version Control Systems: You will need to use Git or another version control system to manage code changes and collaborate with team members.,Testing and Debugging: You should be able to write unit tests and integration tests to ensure that your code works correctly and debug any issues that arise.,Agile Methodologies: Familiarity with agile development methodologies such as Scrum or Kanban can help you manage your time and resources effectively during the project.,"Project Management: You should be able to break down the project into smaller tasks, set deadlines, and track progress to ensure that everything is completed on time and within budget.By possessing these skills, you will be well-equipped to handle the challenges of this project and deliver a high-quality solution that meets the requirements of the stakeholders.",,,,,
23F_1_Identification_of_Pathogens_in_Image_Library__,Python,OpenCV,Machine learning,Data manipulation,Algorithm design,Debugging and testing,Documentation,,,,,,,,
23F_2_Capstone_Purchasing_App_,,,,,,,,,,,,,,,
23F_3_Employee_Coaching_and_Development_Tracking_Page__,,,,,,,,,,,,,,,
23F_4_Data_Clean_up_Tool__,"Data Structures and Algorithms: Understanding data structures like arrays, linked lists, trees, and graphs, as well as algorithms like sorting, searching, and manipulating data, will be crucial for organizing and processing the data.","Programming Languages: Proficiency in at least one programming language, such as Python, Java, or C++, is required for developing the tool. Each language has its own strengths and weaknesses, so choosing the right language based on the project's requirements is essential.","Data Manipulation: The tool must be able to read, write, and manipulate data in various formats, including XML, CSV, PDF, and others. Knowledge of data manipulation libraries and frameworks will be useful.","User Interface Design: A user-friendly interface is essential for a tool that needs to be used by non-technical users. Familiarity with UI design principles, widgets, and frameworks like Tkinter, PyQt, or wxPython will help create an intuitive interface.","Database Management: The tool may need to interact with databases to store and retrieve data. Understanding database concepts like SQL, CRUD operations, and database design will be beneficial.","Error Handling and Debugging: Writing robust code that can handle errors and exceptions is crucial for any software development project. Knowledge of error handling techniques and debugging tools like pdb, inspector, and logging will help identify and fix issues quickly.",Version Control Systems: Collaborative development requires using version control systems like Git to manage code changes and track revisions. Familiarity with Git commands and workflows will help manage the project effectively.,"Web Development: If the tool needs to be accessible over the web, knowledge of web technologies like HTML, CSS, JavaScript, and frameworks like Flask or Django will be useful.","Security: Depending on the type of data being processed, security considerations may arise. Familiarity with security protocols like SSL/TLS, encryption, and access control will help protect sensitive data.","Testing and Quality Assurance: To ensure the tool works correctly, a thorough testing and quality ass",,,,,
23F_5_Camera_to_Robot_Calibration__,"C# programming language: You will be creating C#.dll files for the calibration algorithm, so proficiency in C# is essential.","Computer Vision: Camera-to-robot calibration involves converting camera coordinates to robot coordinates, so knowledge of computer vision concepts (e.g., image processing, feature detection) is crucial.","Point Cloud Library (PCL): For 3D point cloud data, you will need to use PCL, which is a popular library for 3D point cloud processing. Familiarity with PCL is recommended.","Mathematica: While not strictly required, having some knowledge of Mathematica can be helpful for performing calculations and visualizing results.","Software Development: Understanding software development principles, such as design patterns, debugging, and testing, is important for creating robust and reliable code.","Machine Learning: Depending on the approach you take, machine learning concepts may come into play. Familiarity with machine learning frameworks like TensorFlow or PyTorch can be beneficial.","Agile Methodologies: As part of a collaborative project, you may be expected to work using agile methodologies, such as Scrum or Kanban. Knowledge of these approaches can help you communicate effectively with your team and stakeholders.","ACE Software: Familiarity with the ACE software suite can be helpful, as you will be integrating your calibration algorithm with the existing ACE framework.","Robotics: While not strictly necessary, having some understanding of robotics fundamentals can provide context and help you better understand the problem you're trying to solve.",,,,,,
23F_6_WDTrainTrack__,"HTML/CSS: Knowledge of HTML/CSS is essential for creating a user -friendly interface. The developer should be able to create layouts, styling, and structuring the content of the website using HTML and CSS.  ","JavaScript: Understanding of JavaScript is crucial for creating dynamic functionality on the website. The developer should be able to write JavaScript code to handle events, validate forms, and create interactive elements.  ","Node.js: Familiarity with Node.js is necessary for setting up the backend server. The developer should be able to create routes, handle requests, and manage data storage using Node.js.  ","MongoDB: Knowledge of MongoDB is required for creating a robust database system. The developer should be able to design schemas, perform CRUD operations, and optimize database performance.  ","RESTful API: Understanding of RESTful APIs is important for creating a flexible and scalable backend system. The developer should be able to define endpoints, handle authentication, and implement API security measures.  ",Version Control: Proficiency in version control systems such as Git is necessary for managing code changes and collaborating with team members.  ,Testing Frameworks: Knowledge of testing frameworks such as Jest or Mocha is important for ensuring that the application works correctly and is free of bugs.  ,Deployment Strategies: Familiarity with deployment strategies such as Heroku or AWS is necessary for deploying the application to a production environment.  ,Security Best Practices: Understanding of security best practices is important for protecting sensitive data and preventing common web application vulnerabilities.  ,Agile Methodologies: Familiarity with agile methodologies such as Scrum or Kanban is helpful for managing the development process and collaborating with stakeholders.,,,,,
23F_7_DocGPT__,JSON,Large Language Models,REST APIs,Software Development,Programming Languages,Data Structures and Algorithms,Machine Learning,,,,,,,,
23F_8_Satellite_Imagery_Web_Application__,"HTML, CSS, and JavaScript for creating the front-end user interface. ","Knowledge of back-end programming languages such as Python, Node.js, or Ruby. ",Experience with database management systems such as MySQL or MongoDB. ,Familiarity with remote sensing and GIS technologies. ,Understanding of NDVI/NDRE algorithms for image processing. ,Familiarity with RESTful APIs and web services. ,Knowledge of cloud computing platforms such as AWS or Google Cloud Platform. ,Familiarity with containerization technologies such as Docker. ,Experience with agile development methodologies and version control systems like Git. ,Understanding of security protocols and best practices for protecting sensitive data.,,,,,
23F_9_BioSecure_Scheduler__,"Data Structures: You will need to understand how to store and manipulate data structures such as arrays, linked lists, stacks, and queues. This will be useful when dealing with large datasets of technicians, customers, and job requests.  ","Algorithm Design: You will need to know how to design and implement algorithms to solve problems related to scheduling and routing. This includes understanding concepts such as sorting, searching, and graph traversal.  ","Object-Oriented Programming (OOP): You will need to be familiar with OOP concepts such as classes, objects, inheritance, and polymorphism. This will allow you to create modular and reusable code.  ",Database Management Systems: You will need to understand how to interact with a database management system (DBMS) to store and retrieve data. This includes knowing how to write SQL queries and how to handle errors and exceptions.  ,"Web Development: If you plan to display the schedule on a web interface, you will need to have some knowledge of web development technologies such as HTML, CSS, and JavaScript. This will allow you to create a user-friendly interface for users to view and edit the schedule.  ","Security: Depending on the specific requirements of the project, you may also need to have knowledge of security protocols and practices to ensure the privacy and integrity of the data being stored and transmitted.  ",Time and Space Complexity Analysis: You will need to be able to analyze the time and space complexity of your algorithms to ensure they are efficient and scalable.  ,"Debugging and Troubleshooting: Finally, you will need to be able to debug and troubleshoot your code to identify and fix any issues or errors that may arise during implementation.",,,,,,,
23S_10_Relevance_Weighted_Multiple_Meeting_Scheduler__,0  to green=,0) . ,0 guidelines for ensuring that the application is accessible to users with disabilities.,,,,,,,,,,,,
23S_11_GUI_for_an_Image_Recognition_and_Classification_OpenSource__Software__,Familiarity with Linux environment and command line interfaces (CLI) ,"Knowledge of Python programming language, including data structures, control flow, functions, and object-oriented programming. ","Understanding of GUI frameworks such as Tkinter or PyQt, which allow you to build graphical user interfaces (GUIs) for your applications. ","Experience with building and adjusting machine learning (ML) models using libraries like scikit-learn, TensorFlow, or PyTorch. This includes understanding of ML algorithms, model evaluation metrics, and hyperparameter tuning. ","Familiarity with data preprocessing techniques, such as data cleaning, feature scaling, and data augmentation, to prepare datasets for ML models. ","Understanding of statistical concepts, including probability distributions, hypothesis testing, and regression analysis, to interpret and evaluate ML model performance. ","Familiarity with version control systems like Git, which allows you to manage changes to your codebase over time and collaborate with others on the project. ","Ability to debug and troubleshoot issues in your code using tools like print statements, debuggers, and logging mechanisms. ","Understanding of software development best practices, including coding conventions, commenting and documentation, and testing and validation.",,,,,,
23S_12_Inventory_and_Condition_of_Vegetable_Seedlings_in_Trays__Phase_2__,Python,Machine Learning,Computer Vision,Data Structures,Web Development,Optional: Docker,,,,,,,,,
23S_13_Assessing_and_Grading_Wood_Bin_Parts__,Machine Learning (ML) frameworks such as TensorFlow or PyTorch to train and optimize the computer vision algorithms used for object detection and classification.,"Python libraries for image processing and computer vision such as OpenCV, Pillow, or scikit-image.",Object-oriented programming (OOP) concepts to design and implement the software architecture for the vision system.,Knowledge of data structures and algorithms to efficiently process and analyze images.,Experience with cloud computing platforms such as AWS or GCP to deploy and scale the ML models.,"Understanding of DevOps practices and tools such as Docker, Kubernetes, or Jenkins to streamline the deployment and management of the system.",Familiarity with data visualization libraries such as Matplotlib or Seaborn to create interactive dashboards for monitoring and analyzing the system's performance.,Knowledge of database management systems such as MySQL or MongoDB to store and retrieve data related to the sorted parts.,Understanding of software testing methodologies and tools such as JUnit or Pytest to ensure the system functions correctly and reliably.,Familiarity with containerization technologies such as Docker to package the system into a portable and reproducible environment.,,,,,
23S_14_Connec_ted_Construction__,HTML/CSS,JavaScript,Backend Development,SQL,Responsive Design,Sensor Data Processing,Geolocation,Alert Notification,User Interface Design,Testing and Debugging,,,,,
23S_15_Real_Time_Optimization_of_Mobile_Robot__Deceleration_Profile__,"Familiarity with Python programming language and libraries (e.g., NumPy, pandas) ","Understanding of machine learning concepts such as supervised learning, reinforcement learning, and neural networks ",Knowledge of deep learning frameworks such as TensorFlow or PyTorch ,Experience with data preprocessing and feature engineering ,Familiarity with simulation environments such as Gazebo or V-REP ,Understanding of control systems and linear algebra ,Programming skills to implement the neural network and reinforcement learning algorithm ,Ability to debug and optimize the code ,Familiarity with version control systems such as Git ,Understanding of agile software development methodologies.,,,,,
23S_16_CTTA_Member_Database_Management_and_Automation__,Knowledge of database management systems (DBMS) such as MySQL or MongoDB.,"Familiarity with web development frameworks like PHP, Node.js, or Ruby on Rails.",Understanding of RESTful APIs and how to design and implement them.,"Experience with front-end technologies like HTML, CSS, and JavaScript for creating user interfaces.",Familiarity with version control systems like Git for managing code changes and collaborating with team members.,Knowledge of software development methodologies like Agile or Scrum for managing project requirements and deliverables.,Understanding of security best practices for protecting sensitive data and ensuring secure communication between systems.,Familiarity with web hosting services and infrastructure setup for deploying and scaling the system.,Knowledge of web analytics tools for tracking user behavior and measuring the success of the system.,Experience with testing frameworks and techniques for ensuring the system's quality and reliability.,,,,,
23S_17_Smart_Rodent_Detection__Phase_2__,Proficiency in Python,Data Structures and Algorithms,Machine Learning,Web Development,SQL,Version Control,,,,,,,,,
23S_18_Flood_and_Hydrology_Alert_and_Monitoring_System__,HTML/CSS,JavaScript,Databases,APIs,Web frameworks,Server-side scripting,Testing and debugging,,,,,,,,
23S_19_Cilantro_Yield_Estimation__,Python programming language: You will use Python to create the vision/learning system that can detect cilantro leaves and estimate their volume. Familiarity with Python libraries such as OpenCV and NumPy is essential.,"Image processing: You will need to process images of the cilantro plants to extract useful information. This involves techniques such as image segmentation, object detection, and feature extraction.",Machine learning: You will use machine learning algorithms to train the vision/learning system to recognize cilantro leaves and estimate their volume. Familiarity with popular machine learning frameworks such as TensorFlow or PyTorch is helpful.,"Data analysis: You will need to analyze data collected from the camera and other sources (e.g., weather data) to understand the growth patterns of the cilantro plants. Knowledge of statistical analysis and data visualization tools such as NumPy, Pandas, and Matplotlib is important.","Web development: If you want to create a web application to display the data and results of your project, you will need to have some knowledge of web development technologies such as HTML, CSS, and JavaScript.","Database management: Depending on the size and complexity of your project, you may need to manage large amounts of data. Familiarity with database management systems such as MySQL or MongoDB can be helpful.","Version control: To collaborate with your team members and keep track of changes to your codebase, you will need to know how to use version control tools such as Git.","Cloud computing: Depending on the resources required for your project, you may need to use cloud computing services such as AWS or Google Cloud Platform. Knowledge of cloud computing concepts and tools such as containerization and serverless computing can be helpful.","Communication skills: As a member of a capstone software team, you will need to communicate effectively with your team members and stakeholders. This includes writing clear documentation, giving presentations, and participating in meetings.",,,,,,
23S_1_Can_Damage_Detection_by_Vision__,Python programming,OpenCV,Machine learning,Deep learning,Image processing,Object detection,Computer vision,Real-time processing,,,,,,,
23S_20_Student_Experience_Navigation__,HTML/CSS: for creating the user interface and layout of the centralized site.,"JavaScript: for adding interactivity to the website, such as automatically updating the curated page when new content is added to the original sources.",API (Application Programming Interface): for connecting to the original content on the other sites and retrieving the necessary information.,React: a popular front-end library for building reusable UI components and managing state.,Node.js: a server-side runtime environment for building scalable and efficient web applications.,MongoDB: a NoSQL database for storing and retrieving data in a flexible and scalable manner.,GraphQL: a query language for APIs that allows for more efficient data retrieval and manipulation.,AWS (Amazon Web Services): a suite of cloud computing services that can be used for hosting and deploying the web application.,Heroku: a cloud platform for deploying and scaling web applications.,Git: a version control system for tracking changes to the codebase and collaborating with team members.,,,,,
23S_21_Training_Matr_ix__Phase_2__,"Ruby on Rails: The training matrix program is built using Ruby on Rails, so proficiency in this framework is essential. You'll need to know how to create routes, models, views, and controllers. ","SQL: As the program involves interacting with databases, understanding SQL is crucial. You should be familiar with creating, modifying, and querying databases using SQL. ","Mobile Devices: To improve the user interface and functionality on mobile devices, you'll need to have some experience with responsive design and mobile-specific development techniques. ","Additional SQL Tables: Depending on the specific requirements of the project, you may need to create additional SQL tables to store data related to scheduling, reminders, or other features. ","Report Generation: To generate reports based on the data stored in the database, you'll need to have some experience with report generation tools such as Rake or CoffeeScript. ","Scheduling and Reminders: To implement scheduling and reminder features, you'll need to use a scheduling library or tool such as Calendars gem or Pusher Chat API. ","Security Features: To integrate Microsoft Single Sign-On (SSO) security feature, you'll need to have some experience with OAuth authentication and authorization protocols. ","Deployment to SharePoint Environment: To deploy the program to a SharePoint environment, you'll need to have some experience with SharePoint development and deployment processes. ","Responsive Design: As the program will be accessed on various devices, having some experience with responsive design principles and techniques will help ensure a consistent user experience across different platforms. ","Testing and Debugging: Finally, you'll need to have some experience with testing and debugging techniques to ensure the program functions correctly and is free of errors. Overall, a solid understanding of web development frameworks like Ruby on Rails, experience with SQL and NoSQL databases, and familiarity with front-end development principles will be essential for completing this project successfully.",,,,,
23S_22_Evaluation_of_Coordination_Using_VR_Hand_Controllers__,Experience with Python programming language.  ,Familiarity with NumPy and Pandas libraries for data analysis.  ,"Understanding of basic concepts in computer vision such as image processing, object detection, and tracking.  ",Knowledge of machine learning algorithms and their applications.  ,Familiarity with VR development frameworks such as Unity or Unreal Engine.  ,"Experience with sensor integration and data acquisition from sensors such as accelerometers, gyroscopes, and magnetometers.  ",Understanding of signal processing techniques for filtering and feature extraction.  ,Familiarity with plotting and visualization tools such as Matplotlib and Seaborn.  ,Knowledge of statistics and statistical modeling techniques.  ,Experience with debugging and troubleshooting issues in code.,,,,,
23S_2_TA_Allocation_Algorithm_Implementation__,"Database management systems (DBMS): Developing a database-driven web application requires proficiency in managing databases using SQL or NoSQL databases such as MySQL, PostgreSQL, MongoDB, etc. ","Web development frameworks: Knowledge of popular web development frameworks like React, Angular, Vue.js, Django, Flask, Ruby on Rails, etc. is essential for creating a responsive and user-friendly web interface. ","Front-end development: Understanding how to build visually appealing and responsive user interfaces using HTML, CSS, JavaScript, and frameworks like React, Angular, or Vue.js is crucial. ","Back-end development: Proficiency in server-side scripting languages like Python, Ruby, PHP, Java, etc., and familiarity with popular back-end frameworks like Node.js, Express.js, Laravel, Django, etc. are necessary for building the server-side logic and API endpoints. ","Security: With sensitive data involved, it's important to have knowledge of web application security best practices, including authentication and authorization, input validation, SSL/TLS encryption, and vulnerability assessment. ",Data modeling: Understanding how to design and implement a data model that represents the structure and relationships of the data in the database is vital for developing an effective and efficient application. ,"User experience (UX) design: Creating a user-friendly application requires knowledge of UX principles, including user research, wireframing, prototyping, and usability testing. ","Version control systems: Familiarity with version control tools like Git, SVN, or Mercurial is helpful for tracking changes, collaborating with team members, and maintaining a record of the application's development history. ","Testing and debugging: Knowledge of testing methodologies and tools, such as unit testing, integration testing, and debugging techniques, is essential for ensuring the application works correctly and is free of errors.",,,,,,
23S_3_Bottling_Change_Part_Wear_Measuring_Tool__Phase_2__,"5L bottles.  ### Assistant: To complete this project, you will need the following programming knowledge and skills: ","Python programming language: You will use Python to design and develop the tool's software. You will need to know how to write code, debug, and test it. ","Tkinter library: Tkinter is a Python library used for creating graphical user interfaces (GUIs). You will use Tkinter to create the tool's GUI, including buttons, menus, and other visual elements. ",Pillow library: Pillow is a Python library used for image processing. You will use Pillow to process images of the bottle caps and calculate their dimensions. ,NumPy library: NumPy is a Python library used for numerical computing. You will use NumPy to perform mathematical operations on the measurements taken by the tool. ,SciPy library: SciPy is a Python library used for scientific computing. You will use SciPy to perform statistical analysis on the data collected by the tool. ,"Data structures and algorithms: You will need to know how to use data structures such as lists, dictionaries, and arrays, as well as algorithms such as sorting, searching, and clustering. These will be useful for organizing and analyzing the data collected by the tool. ","Object-oriented programming: You will use object-oriented programming principles to design and implement the tool's software architecture. This will involve defining classes, methods, and functions, and organizing them into a cohesive program. ","Debugging and testing: You will need to know how to identify and fix errors in your code, as well as how to test the tool's functionality to ensure it works as intended. ","Version control: You will use version control systems such as Git to manage changes to the tool's codebase over time, collaborate with others, and track changes made to the tool. ","User interface design: You will need to know how to design a user-friendly interface for the tool, including layout, colors, fonts, and other visual elements. This will help ensure that users can easily understand how to use the tool and get accurate measurements.",,,,
23S_4_Planter_Revitalization_&_Modernization__App_,JavaScript,HTML,CSS,Responsive design,Maps API,Data storage,SQL queries,Node.js,Socket.io,Security,Lack of user testing,Poorly designed user interface,Performance issues,,
23S_5_Using_Sensors_to_Collect_Road_User_Data_,"Programming languages: The project requires proficiency in at least one programming language, preferably Python or C++.","Computer Vision: Understanding computer vision concepts such as image processing, object detection, and tracking is crucial for analyzing visual data. Familiarity with libraries like OpenCV, TensorFlow, or PyTorch will be helpful.","Machine Learning: To classify and count road users automatically, machine learning algorithms will be used. Knowledge of supervised learning techniques, such as classification and regression, is essential.","Data Structures and Algorithms: The project involves processing and analyzing large amounts of visual data. Therefore, understanding data structures like arrays, linked lists, and trees, as well as algorithms like sorting and searching, is important.","Image Processing: Image processing techniques like edge detection, thresholding, and feature extraction will be used to preprocess the visual data. Familiarity with libraries like NumPy, SciPy, or OpenCV will help.","Camera Calibration: To accurately detect and track objects in images, camera calibration is necessary. Knowledge of camera models, distortion correction, and intrinsic/extrinsic parameters will be useful.",Object Detection: Being able to detect and classify objects in images using deep learning models like YOLO or SSD is desirable.,Tracking: The ability to track objects across frames and maintain their associations is critical for accurate counting and classification. Familiarity with tracking algorithms like the Kalman filter or particle filter will be beneficial.,"Database Management: Depending on the specific implementation, the system may need to store and retrieve data from a database. Knowledge of SQL and database design principles will be helpful.","Sensors and Hardware Integration: Depending on the implementation, integrating sensors like cameras, GPS, or other IoT devices may be necessary. Understanding how to interface with these sensors and integrate them into the system will be important.",,,,,
23S_6_Farm_Robotics_Challenge__AutonomyCourse_Navigation__,Robotics Operating System (ROS),C++ Programming Language,Python Programming Language,JavaScript,GPS and IMU Integration,Motion Planning and Path Following,Perception and Object Recognition,,,,,,,,
"23S_7_Farm_Robotics_Challenge__Artificial_Intelligence_(Vision_and_Sensing,_Dataset_","Familiarity with ROS (Robot Operating System) library, which is used for developing control software for robots. ",Experience with OpenCV or similar libraries for image processing and computer vision tasks. ,Understanding of how to integrate cameras and GPS receivers into a robot system. ,Knowledge of how to measure performance in terms of data collection. ,Familiarity with software development using APIs provided by companies like Farm-ng.,,,,,,,,,,
23S_8_Virtual_Warehouse__,"Familiarity with C# programming language: You will need to have a good understanding of C#, including its syntax, data types, control structures, and object-oriented programming concepts.","Understanding of Bluetooth Low Energy (BLE) technology: BLE is the technology used for communication between the Bluetooth beacon and the AoA gateway. You will need to understand how BLE works, including the different roles of the beacon and gateway, and how to write code that can communicate with BLE devices.","Knowledge of AoA (Angle of Arrival) concepts: To accurately determine the location of a moving device using AoA, you will need to understand the principles of AoA, including how it is calculated and how it can be affected by various factors such as signal strength and multipath interference.","Familiarity with Windows 10/11 operating system: As the data collected by the AoA gateway will need to be processed and displayed on a PC running Windows 10/11, you will need to have some experience working with this operating system.",Understanding of JSON (JavaScript Object Notation) data format: JSON is a lightweight data interchange format that is commonly used to transmit data between web servers and web applications. You will need to understand how to work with JSON data in C#.,"Familiarity with Dusun's open-source code samples: Dusun provides open-source code samples for their BLE modules, which you will need to use in your project. You should be familiar with how to integrate these code samples into your own application.",Understanding of the 4x4 grid system: The AoA gateway will be measuring the distance between the beacon and the moving device using a 4x4 grid system. You will need to understand how this system works and how to calculate distances based on the measurements taken by the grid.,"Ability to write efficient and scalable code: As the AoA system will be tracking the location of multiple moving devices, you will need to write code that can efficiently handle large amounts of data and scale to accommodate more devices as needed.",,,,,,,
23S_9_EZFileTrail__,HTML,CSS,JavaScript,Front-end frameworks,Back-end technologies,Databases,APIs,Security,Version control,,,,,,
